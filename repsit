#!/usr/bin/env bash
# repsit v.5
# copyright 2011 fsmithred@gmail.com
# License: GPL-3


# define some package lists.
# If you add a package list here, you must also add it to the
# zenity list around line 50 and to the if/then list below that.
# Note that a list can contain one or more packages. 
Synaptic=(synaptic)
dvd_set=(libdvdcss2 libdvdnav4 libdvdread4)
flash_vid=(flashplugin-nonfree sun-java6-plugin)
file_share_win=(samba smbfs smbclient)
file_share_lin=(nfs-kernel-server nfs-common)
graphics=(gimp blender inkscape)
module_comp=(build-essential gcc-4.3 linux-headers-2.6.32-5-686 module-assistant)
kernel_comp=(kernel-package ncurses-dev module-init-tools initramfs-tools procps fakeroot zlib1g-dev)
nvidia_driver=(nvidia-glx nvidia-settings nvidia-xconfig)
mousepad=(mousepad)

# Check that user is root.
[[ $(id -u) -eq 0 ]] || { printf "\t You need to be root!\n" ; exit 1 ; }


zenity --question  --ok-label=OK --cancel-label="Skip update" \
  --text="Before installing new software, the system should be updated. If you haven't done this recently (i.e. in the last 24 hours) you should click OK to proceed. 
  
Click OK to proceed, or Cancel to skip the update." 

if [[ $? = 0 ]] ; then
    if [[ $(type -p update-manager) ]] ; then
        update-manager
    else
        zenity --question  --ok-label=Yes --cancel-label=No --text="Update Manager is not installed. If you don't install it, you need to run the updates manually. In either case, you'll need to run this installer again.
        
Install update-manager-gnome now?"
        if [[ $? = 0 ]] ; then
            aptitude -y install update-manager-gnome | tee >(zenity --progress --pulsate)
            exit 0
        else
            exit 0
        fi
    fi
fi

ans=$(zenity --list --title="Installation Menu" --text "Choose package groups to install" --checklist \
  --ok-label=OK --cancel-label=Exit --width=520 --height=320  \
  --column "Pick" --column "Package Group" --column "Description" \
  FALSE Synaptic "full-featured graphical package manager" \
  FALSE dvd_set "software to watch dvd movies" \
  FALSE flash_vid "install Adobe flash and Sun Java browser plugins" \
  FALSE file_share_win "share files with windows computers (smb)" \
  FALSE file_share_lin "share files with linux computers (nfs)" \
  FALSE graphics "programs for editing pictures and movies" \
  FALSE nvidia_driver "proprietary nvidia graphics driver" \
  FALSE module_comp "gcc, make, headers, module-assistant" \
  FALSE kernel_comp "programs needed for compiling the linux kernel" )
echo "$ans"


# this needs to be here in case the list is cancelled or ok'd with no selections.
if [[ -z $ans ]]; then
    exit 0
fi

# Put all selected package lists into an install list.
if $(echo $ans | grep -q Synaptic) ; then
    install_list=("${install_list[@]}"  "${Synaptic[@]}")
fi
if $(echo $ans | grep -q dvd_set) ; then
    install_list=("${install_list[@]}"  "${dvd_set[@]}")
fi
if $(echo $ans | grep -q flash_vid) ; then
    install_list=("${install_list[@]}"  "${flash_vid[@]}")
fi
if $(echo $ans | grep -q file_share_win) ; then
    install_list=("${install_list[@]}"  "${file_share_win[@]}")
fi
if $(echo $ans | grep -q file_share_lin) ; then
    install_list=("${install_list[@]}"  "${file_share_lin[@]}")
fi
if $(echo $ans | grep -q graphics) ; then
    install_list=("${install_list[@]}"  "${graphics[@]}")
fi
if $(echo $ans | grep -q module_comp) ; then
    install_list=("${install_list[@]}"  "${module_comp[@]}")
fi
if $(echo $ans | grep -q kernel_comp) ; then
    install_list=("${install_list[@]}"  "${kernel_comp[@]}")
fi
if $(echo $ans | grep -q nvidia_driver) ; then
    install_list=("${install_list[@]}"  "${nvidia_driver[@]}")
fi

echo "${install_list[@]}"

zenity --question --text="$(aptitude -s install ${install_list[@]} &)"
if [[ $? = 0 ]] ; then
    aptitude -y install ${install_list[@]}  | tee >(zenity --progress --pulsate)
else
    echo "You said no."
    exit 0
fi

exit 0
